# Generated by Django 2.2.12 on 2020-04-16 10:18

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group',
                                                  verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user',
                                                            to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='')),
                ('description', models.TextField(blank=True)),
                ('type_of_box',
                 models.CharField(choices=[('regular', 'regular'), ('client', 'client')], default='regular',
                                  max_length=7)),
                ('splitters_number', models.IntegerField(default=0)),
                ('point', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('online', models.BooleanField(default=False)),
                ('mac', models.BigIntegerField(null=True, unique=True)),
                ('ip', models.BigIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='')),
                ('path', django.contrib.gis.db.models.fields.LineStringField(srid=4326)),
                ('end', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_wires',
                                          to='core.Box')),
                ('start', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='output_wires',
                                            to='core.Box')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                           to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OutputPigTail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_terminals', models.IntegerField(null=True)),
                ('box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbox_output',
                                          to='core.Box')),
                ('output',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='start_pigtail',
                                      to='core.Wire')),
            ],
        ),
        migrations.CreateModel(
            name='InputPigTail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_terminals', models.IntegerField(null=True)),
                ('box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbox_input',
                                          to='core.Box')),
                ('input', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='end_pigtail',
                                               to='core.Wire')),
            ],
        ),
        migrations.CreateModel(
            name='Fiber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=32)),
                ('start_object_id', models.PositiveIntegerField()),
                ('end_object_id', models.PositiveIntegerField()),
                ('box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbox_fiber',
                                          to='core.Box')),
                ('end_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end',
                                                       to='contenttypes.ContentType')),
                ('start_content_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start',
                                   to='contenttypes.ContentType')),
            ],
        ),
        migrations.AddField(
            model_name='box',
            name='client',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                       related_name='connected_box', to='core.Client'),
        ),
        migrations.AddField(
            model_name='box',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Splitter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_terminals', models.IntegerField(null=True)),
                ('label', models.CharField(max_length=8)),
                ('box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbox_splitter',
                                          to='core.Box')),
            ],
            options={
                'unique_together': {('label', 'box')},
            },
        ),
    ]
